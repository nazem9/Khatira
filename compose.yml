services:
  backend:
    build: 
      context: ./admin
      dockerfile: ./DockerFile
    ports:
      - "8000:8000"
    volumes:
      - ./admin:/app
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: admins
      MYSQL_USER: admin
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./dbdata:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  fastapi:
    build: 
      context: ./fastapi
      dockerfile: ./DockerFile  
    ports:
      - "8001:8001"
    volumes:
      - ./fastapi/:/app
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: react_app
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - app-network

  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: DockerFile  # Adjust as needed
  #   ports:
  #     - "3000:3000"  # Change port if needed
  #   networks:
  #     - app-network

  # nginx:
  #   image: nginx:latest
  #   restart: always
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - backend
  #     # - frontend
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge